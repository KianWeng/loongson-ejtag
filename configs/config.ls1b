echo_on
setenv ENV_memsize 256
setenv ENV_highmemsize 0
setenv ENV_busclock 128222328
renamecmd erase erase_all
#newcmd erase erase_area
newcmd erase erase_all

function reboot
m4 0xbfe5c060 1 1 1
ret


function configddr
setconfig usb_ejtag.put_speed 0x400
loop 20 m4 0xbfe78030 0x4
m4 0xbfe78034 0x9228ce00
msleep 3000
m4 0xbfd00424 0
msleep 1000
ddr2_config configs/ddr2.ls1b.txt
m4 0xbfd00424 0x110000
msleep 1000
memtest 0xa0000000 0xa0000100
ret

function erase
setconfig flash.type byte
erase 0 0x7ffff 0x1000
ret

function program
letl f ${1:/tmp/gzrom.bin}
letl s $(test -s $f)
setconfig helpaddr 0x8000f000
put $f 0x81000000
setconfig flash.type byte
erase 0 0x7ffff 0x1000
program 0x81000000 0 $s
ret

function program_cachelock
letl f ${1:/tmp/gzrom.bin}
letl s $(test -s $f)
#hb 0 0xffffffff
#watch 0 0xffffffff
setconfig core.nocache 0
cache_init
setconfig flash.type byte
erase 0 0x7ffff 0x1000
map bin/spi.BIN 0xff210000
letl len $(test -s bin/spi.BIN)
sprogram 0xff210000 0  $len
unmap
m1 0xbfe80004 0x1
cache 28 0x9fc00000 $len
map $f 0xff240000
erase 0 0x7ffff 0x1000
setconfig core.nocache 1
scallmem 0x9fc00000 0xff240000 0 $s
setconfig core.nocache 0
unmap
ret

function guess_cachelock
guess_cachelock1:f
setconfig core.nocache 0
cache_init
do if $(test $0 == guess_cachelock)
letl f bin/guess.bin
letl s $(test -s $f)
setconfig flash.type byte
erase 0 0x7ffff 0x1000
map $f 0xff210000
sprogram 0xff210000 0  $s
unmap
m1 0xbfe80004 0x1
end
cache 28 0x9fc40000 0x1000
setconfig callbin.stackaddr 0x9fc40000
setconfig callbin.stacksize 0x1000
callmem 0x9fc00000 ${1:0x80000000} ${2:0x81000000}
ret

function testserial
echo_on
letl @a 0xbfe40000 0xbfe44000 0xbfe48000 0xbfe4c000 0xbfe6c000 0xbfe7c000 0xbfe41000 0xbfe42000 0xbfe43000 0xbfe45000 0xbfe46000 0xbfe47000

m4 0xbfe78038 {$(d4q 0xbfe78038 1)|3}
m4 0xbfd00424 {$(d4q 0xbfd00424 1)|0x30}

for letl i 0; {$i<12};letl i {$i+1}
letl base ${a$i}
m1 {$base+2} 0x47
m1 {$base+3} 0x80
m1 {$base+0} 0x22 0
m1 {$base+3} 3
m1 {$base+4} 3
m1 {$base+1} 0
end

do while 1

for letl i 0; {$i<12};letl i {%%d $i+1}
letl base ${a$i}
m1 $base {0x61+$i}
m1 $base 0xd
m1 $base 0xa
end

end
ret

function set_gpio_out
letl pin val ${1:0} ${2:0}
letl off {($pin/32)*4}
letl pin {$pin%32}
letl cfg {0xbfd010C0+$off}
letl dir {0xbfd010d0+$off}
letl out {0xbfd010f0+$off}

m4 $cfg {$(d4q $cfg 1)|(1<<$pin)}
m4 $dir {$(d4q $dir 1)&(~(1<<$pin))}
do if $val
m4 $out {$(d4q $out 1)|(1<<$pin)}
else
m4 $out {$(d4q $out 1)&~(1<<$pin)}
end
ret



letl phy 16
letl base 0xffffffffbfe10000
source "scripts/gmac.cmd"


info f

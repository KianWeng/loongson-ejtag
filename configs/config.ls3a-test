echo_on
setconfig core.cpucount 4
setconfig core.cpuwidth 64
setconfig core.abisize 64
setconfig helpaddr 0xffffffff8000f000
setconfig usb_ejtag.put_speed 0
setconfig core.nocache 1
setconfig jtag.jrhb 1
setconfig jtag.jalrhb 1

setconfig jtag.synci 1
setconfig put.fastdata 0

function erase
if {$(setconfig core.abisize)==64} letl pfile bin/sst.bin64
scallbin ${pfile:bin/sst.bin} iue 0xffffffffbfc00000 0 0xa0000 0x1000
ret

function configddr
m4 0x900000001fe00180 0xfffff417
m4 0x900000001fe00184 0x1f
m8 0x900000003ff00000 0x0000000000000000
m8 0x900000003ff00040 0xfffffffff0000000
#0xf1 for memory controler 1
m8 0x900000003ff00080 ${1:0x00000000000000f0}

m8 0x900000000ff00000 0x0000010000000100
# 8 bank
m8 0x900000000ff00010 0x0001000100010001 
m8 0x900000000ff00020 0x0100010000000000
#bit 8 32bit
m8 0x900000000ff00030 0x0101000001000000
m8 0x900000000ff00040 0x0002010200000101
m8 0x900000000ff00050 0x0200000404060100
m8 0x900000000ff00060 0x0a05040804040003
m8 0x900000000ff00070 0x0f0e000000010c0c
m8 0x900000000ff00080 0x0804020100000000
m8 0x900000000ff00090 0x0000091100000000
m8 0x900000000ff000a0 0x0000003f3f1b0418
m8 0x900000000ff000b0 0x0000000000000000
m8 0x900000000ff000c0 0x0000560814000000
m8 0x900000000ff000d0 0x0000000000000000
m8 0x900000000ff000e0 0x0000000000000000
m8 0x900000000ff000f0 0x0000000000000000
m8 0x900000000ff00100 0x0000000000000000
m8 0x900000000ff00110 0x0000000000000900
m8 0x900000000ff00120 0xffff000000000000
m8 0x900000000ff00130 0x52100003020000c8
m8 0x900000000ff00140 0x0000204002000060
m8 0x900000000ff00150 0x00000000000340d0
m8 0x900000000ff00160 0x0000000000000000
m8 0x900000000ff00170 0x0000000000000000
m8 0x900000000ff00180 0x0000000000000000
m8 0x900000000ff00190 0x0000000000000000
m8 0x900000000ff001a0 0x0000000000000000
m8 0x900000000ff001b0 0x0000000000000007
m8 0x900000000ff001c0 0x0000000000000000
m8 0x900000000ff001d0 0x0204070400000001
m8 0x900000000ff001e0 0x0000000000000206
m8 0x900000000ff001f0 0x001e008000000000
m8 0x900000000ff00200 0x001e0080001e0080
m8 0x900000000ff00210 0x001e008000200080
m8 0x900000000ff00220 0x001e0080001e0080
m8 0x900000000ff00230 0x001e0080001e0080
m8 0x900000000ff00240 0x0000200000002000
m8 0x900000000ff00250 0x0000220000002000
m8 0x900000000ff00260 0x0000200000002000
m8 0x900000000ff00270 0x0000200000002000
m8 0x900000000ff00280 0x0000000000002000
m8 0x900000000ff00290 0x0000000000000000
m8 0x900000000ff002a0 0x0000000000000000
m8 0x900000000ff002b0 0x0000000000000000
m8 0x900000000ff002c0 0x0000000000000000
m8 0x900000000ff002d0 0xf400373303c009bd
m8 0x900000000ff002e0 0xf4003733f4003733
m8 0x900000000ff002f0 0xf4003733f4003733
m8 0x900000000ff00300 0xf4003733f4003733
m8 0x900000000ff00310 0xf4003733f4003733
m8 0x900000000ff00320 0x26c0000126c00001
m8 0x900000000ff00330 0x26c0000126c00001
m8 0x900000000ff00340 0x26c0000126c00001
m8 0x900000000ff00350 0x26c0000126c00001
m8 0x900000000ff00360 0x0800e10026c00001
m8 0x900000000ff00370 0x0000000000000000
m8 0x900000000ff00380 0x0000000000000000
m8 0x900000000ff00390 0x0000000000000000
m8 0x900000000ff003a0 0x0000000000000000
m8 0x900000000ff003b0 0x0000000000000000
m8 0x900000000ff003c0 0x0000000000000000
m8 0x900000000ff003d0 0x0000000000000000
m8 0x900000000ff003e0 0x0000000000000000
m8 0x900000000ff003f0 0x0000000000000000
m8 0x900000000ff00400 0x0000000000000000
m8 0x900000000ff00410 0x0000000000000000
m8 0x900000000ff00420 0x0000000000000000
m8 0x900000000ff00430 0x0000000000000000
m8 0x900000000ff00440 0x0000000000000000
m8 0x900000000ff00450 0x0000000000000000
m8 0x900000000ff00460 0x0000000000000000
m8 0x900000000ff00470 0x0000000000000000
m8 0x900000000ff00480 0x0000000000000000
m8 0x900000000ff00490 0x0000000000000000
m8 0x900000000ff004a0 0x0000000000000000
m8 0x900000000ff004b0 0x0000000000000000
m8 0x900000000ff004c0 0x0000000000000000
m8 0x900000000ff004d0 0x0000000000000000
m8 0x900000000ff004e0 0x0000000000000000
m8 0x900000000ff004f0 0x0000000000000000
m8 0x900000000ff00500 0x0000000000000000
m8 0x900000000ff00510 0x0000000000000000
m8 0x900000000ff00520 0x0000000000000000
m8 0x900000000ff00530 0x0000000000000000
m8 0x900000000ff00540 0x0000000000000000
m8 0x900000000ff00550 0x0000000000000000
m8 0x900000000ff00560 0x0000000000000000
m8 0x900000000ff00570 0x0000000000000000
m8 0x900000000ff00580 0x0000000000000000
m8 0x900000000ff00590 0x0000000000000000
m8 0x900000000ff005a0 0x0000000000000000
m8 0x900000000ff005b0 0x0000000000000000
m8 0x900000000ff005c0 0x0000000000000000
m8 0x900000000ff005d0 0x0000000000000000
m8 0x900000000ff005e0 0x0000000000000000
m8 0x900000000ff005f0 0x0000000000000000
m8 0x900000000ff00600 0x0000000000000000
m8 0x900000000ff00610 0x0000000000000000
m8 0x900000000ff00620 0x0000000000000000
m8 0x900000000ff00630 0x0000000000000000
m8 0x900000000ff00640 0x0000000000000000
m8 0x900000000ff00650 0x0000000000000000
m8 0x900000000ff00660 0x0000000000000000
m8 0x900000000ff00670 0x0000000000000000
m8 0x900000000ff00680 0x0000000000000000
m8 0x900000000ff00690 0x0000000000000000
m8 0x900000000ff006a0 0x0000000000000000
m8 0x900000000ff006b0 0x0000000000000000
m8 0x900000000ff006c0 0x0000000000000000
m8 0x900000000ff006d0 0x0000000000000000
m8 0x900000000ff006e0 0x0000000000000000
m8 0x900000000ff006f0 0x0000000000000000
m8 0x900000000ff00700 0x0000000000000000
m8 0x900000000ff00710 0x0000000000000000
m8 0x900000000ff00720 0x0000000000000000
m8 0x900000000ff00730 0x0000000000000000
m8 0x900000000ff00740 0x0100000000000000
m8 0x900000000ff00750 0x0000000101020101
m8 0x900000000ff00760 0x0303030a00030002
m8 0x900000000ff00770 0x0101010202020203
m8 0x900000000ff00780 0x0102020400060c01
m8 0x900000000ff00790 0x2819000000000f0f
m8 0x900000000ff007a0 0x0000000000000000
m8 0x900000000ff007b0 0x0000000000000000
m8 0x900000000ff007c0 0x0000000000000000
m8 0x900000000ff007d0 0x0000000000000000
m8 0x900000000ff007e0 0x0000000000000000
m8 0x900000000ff007f0 0x0000000000000000
m8 0x900000000ff00800 0x0000000000000000
m8 0x900000000ff00810 0x0000000000000000
m8 0x900000000ff00820 0xee0000ee00400000
m8 0x900000000ff00830 0x0000000000000c00
m8 0x900000000ff00840 0x0000640064000000
m8 0x900000000ff00850 0x0000000000000064
m8 0x900000000ff00860 0x0000004000000000
m8 0x900000000ff00870 0x0000000000000000
m8 0x900000000ff00880 0x0000000000000000
m8 0x900000000ff00890 0x0000000000000000
m8 0x900000000ff008a0 0x00000000001c001c
m8 0x900000000ff008b0 0x0000000000000000
m8 0x900000000ff008c0 0x0000000000000000
m8 0x900000000ff008d0 0x0000041104000000
m8 0x900000000ff008e0 0x0000000030000000
m8 0x900000000ff008f0 0x0000000010101080
m8 0x900000000ff00900 0x0000000000000000
m8 0x900000000ff00910 0x0000000000000000
m8 0x900000000ff00920 0x0000000000000000
m8 0x900000000ff00930 0x0000000000000000
m8 0x900000000ff00940 0xff04040000060600
m8 0x900000000ff00950 0x0000000000000d00
m8 0x900000000ff00960 0x0705000000040100
m8 0x900000000ff00970 0x000000000003e825
m8 0x900000000ff00980 0x0001010001000101
m8 0x900000000ff00990 0x0404040404040400
m8 0x900000000ff009a0 0x0707050500090004
m8 0x900000000ff009b0 0x02000100000a000f
m8 0x900000000ff009c0 0x04200c2d0c2d0c2d
m8 0x900000000ff009d0 0x0044042004200420
m8 0x900000000ff009e0 0x0000004400440044
m8 0x900000000ff009f0 0x0000000000000000
m8 0x900000000ff00a00 0x007f000000000000
m8 0x900000000ff00a10 0x0000000000000000
m8 0x900000000ff00a20 0x0000000000000000
m8 0x900000000ff00a30 0x001a001800160000
m8 0x900000000ff00a40 0x001c001c001c001a
m8 0x900000000ff00a50 0x00000000001c001c
m8 0x900000000ff00a60 0x0000000000000000
m8 0x900000000ff00a70 0x0004000000000000
m8 0x900000000ff00a80 0x000a000800080006
m8 0x900000000ff00a90 0x000a000800080006
m8 0x900000000ff00aa0 0x0016ffff00000010
m8 0x900000000ff00ab0 0x001c001a001a0018
m8 0x900000000ff00ac0 0x001c001c001c001c
m8 0x900000000ff00ad0 0x0000000000000000
m8 0x900000000ff00ae0 0x0000000000000000
m8 0x900000000ff00af0 0x0012001200000000
m8 0x900000000ff00b00 0x0030001c00140012
m8 0x900000000ff00b10 0x0000001c00360030
m8 0x900000000ff00b20 0x00000c2d00000c2d
m8 0x900000000ff00b30 0x00000c2d00000c2d
#bit8 32bit
m8 0x900000000ff00030 0x0101010001000000
m4 0x900000001fe00180 0xfffff517
msleep 3000
${NOMT}memtest 0xa0000000 0xa0000100

ret

function configddr1_32
m4 0x900000001fe00180 0xfffff417
m4 0x900000001fe00184 0x1f
m8 0x900000003ff00000 0x0000000000000000
m8 0x900000003ff00040 0xfffffffff0000000
#0xf1 for memory controler 1
m8 0x900000003ff00080 0x00000000000000f1

m8 0x900000000ff00000 0x0000010000000100
m8 0x900000000ff00010 0x0000000100010001
m8 0x900000000ff00020 0x0100010000000000
m8 0x900000000ff00030 0x0001000001000100
m8 0x900000000ff00040 0x0002010100000101
m8 0x900000000ff00050 0x0700010404060100
m8 0x900000000ff00060 0x0a05050805050003
m8 0x900000000ff00070 0x0f0e000000030c0c
m8 0x900000000ff00080 0x0804010200000000
m8 0x900000000ff00090 0x0000070f00000000
m8 0x900000000ff000a0 0x0000001f3f14040e
m8 0x900000000ff000b0 0x0000000000000000
m8 0x900000000ff000c0 0x000034060f200000
m8 0x900000000ff000d0 0x0000000000000000
m8 0x900000000ff000e0 0x0000000000000000
m8 0x900000000ff000f0 0x0000000000000000
m8 0x900000000ff00100 0x0000000000000000
m8 0x900000000ff00110 0x0000000000000900
m8 0x900000000ff00120 0x001c000000000000
m8 0x900000000ff00130 0x52100003020000c8
m8 0x900000000ff00140 0x0000204002000038
m8 0x900000000ff00150 0x0000000000027100
m8 0x900000000ff00160 0x0000000000000000
m8 0x900000000ff00170 0x0000000040000000
m8 0x900000000ff00180 0x0000000000000000
m8 0x900000000ff00190 0x0000000000000000
m8 0x900000000ff001a0 0x0000000000000000
m8 0x900000000ff001b0 0x0000000000000007
m8 0x900000000ff001c0 0x0000000000000000
m8 0x900000000ff001d0 0x02040b0400000001
m8 0x900000000ff001e0 0x0000000000000206
m8 0x900000000ff001f0 0x001c008000000000
m8 0x900000000ff00200 0x001c0080001c0080
m8 0x900000000ff00210 0x001c0080001c0080
m8 0x900000000ff00220 0x001c0080001c0080
m8 0x900000000ff00230 0x001c0080001c0080
m8 0x900000000ff00240 0x0000200000002000
m8 0x900000000ff00250 0x0000200000002000
m8 0x900000000ff00260 0x0000200000002000
m8 0x900000000ff00270 0x0000200000002000
m8 0x900000000ff00280 0x0000000000002000
m8 0x900000000ff00290 0x0000000000000000
m8 0x900000000ff002a0 0x0000000000000000
m8 0x900000000ff002b0 0x0000000000000000
m8 0x900000000ff002c0 0x0000000000000000
m8 0x900000000ff002d0 0x03003733007809b5
m8 0x900000000ff002e0 0x0300373303003733
m8 0x900000000ff002f0 0x0400373303003733
m8 0x900000000ff00300 0x0403373304003733
m8 0x900000000ff00310 0x0400373304033733
m8 0x900000000ff00320 0x15c0000015c00000
m8 0x900000000ff00330 0x15c0000015c00000
m8 0x900000000ff00340 0x26c0000226c00002
m8 0x900000000ff00350 0x26c0000226c00002
m8 0x900000000ff00360 0x0000c10026c00002
m8 0x900000000ff00370 0x0000000000000000
m8 0x900000000ff00380 0x0000000000000000
m8 0x900000000ff00390 0x0000000000000000
m8 0x900000000ff003a0 0x0000000000000000
m8 0x900000000ff003b0 0x0000000000000000
m8 0x900000000ff003c0 0x0000000000000000
m8 0x900000000ff003d0 0x0000000000000000
m8 0x900000000ff003e0 0x0000000000000000
m8 0x900000000ff003f0 0x0000000000000000
m8 0x900000000ff00400 0x0000000000000000
m8 0x900000000ff00410 0x0000000000000000
m8 0x900000000ff00420 0x0000000000000000
m8 0x900000000ff00430 0x0000000000000000
m8 0x900000000ff00440 0x0000000000000000
m8 0x900000000ff00450 0x0000000000000000
m8 0x900000000ff00460 0x0000000000000000
m8 0x900000000ff00470 0x0000000000000000
m8 0x900000000ff00480 0x0000000000000000
m8 0x900000000ff00490 0x0000000000000000
m8 0x900000000ff004a0 0x0000000000000000
m8 0x900000000ff004b0 0x0000000000000000
m8 0x900000000ff004c0 0x0000000000000000
m8 0x900000000ff004d0 0x0000000000000000
m8 0x900000000ff004e0 0x0000000000000000
m8 0x900000000ff004f0 0x0000000000000000
m8 0x900000000ff00500 0x0000000000000000
m8 0x900000000ff00510 0x0000000000000000
m8 0x900000000ff00520 0x0000000000000000
m8 0x900000000ff00530 0x0000000000000000
m8 0x900000000ff00540 0x0000000000000000
m8 0x900000000ff00550 0x0000000000000000
m8 0x900000000ff00560 0x0000000000000000
m8 0x900000000ff00570 0x0000000000000000
m8 0x900000000ff00580 0x0000000000000000
m8 0x900000000ff00590 0x0000000000000000
m8 0x900000000ff005a0 0x0000000000000000
m8 0x900000000ff005b0 0x0000000000000000
m8 0x900000000ff005c0 0x0000000000000000
m8 0x900000000ff005d0 0x0000000000000000
m8 0x900000000ff005e0 0x0000000000000000
m8 0x900000000ff005f0 0x0000000000000000
m8 0x900000000ff00600 0x0000000000000000
m8 0x900000000ff00610 0x0000000000000000
m8 0x900000000ff00620 0x0000000000000000
m8 0x900000000ff00630 0x0000000000000000
m8 0x900000000ff00640 0x0000000000000000
m8 0x900000000ff00650 0x0000000000000000
m8 0x900000000ff00660 0x0000000000000000
m8 0x900000000ff00670 0x0000000000000000
m8 0x900000000ff00680 0x0000000000000000
m8 0x900000000ff00690 0x0000000000000000
m8 0x900000000ff006a0 0x0000000000000000
m8 0x900000000ff006b0 0x0000000000000000
m8 0x900000000ff006c0 0x0000000000000000
m8 0x900000000ff006d0 0x0000000000000000
m8 0x900000000ff006e0 0x0000000000000000
m8 0x900000000ff006f0 0x0000000000000000
m8 0x900000000ff00700 0x0000000000000000
m8 0x900000000ff00710 0x0000000000000000
m8 0x900000000ff00720 0x0000000000000000
m8 0x900000000ff00730 0x0000000000000000
m8 0x900000000ff00740 0x0100000000000000
m8 0x900000000ff00750 0x0000000101020101
m8 0x900000000ff00760 0x0303030a00030002
m8 0x900000000ff00770 0x0101010202020203
m8 0x900000000ff00780 0x0102020400060c01
m8 0x900000000ff00790 0x2819000000000f0f
m8 0x900000000ff007a0 0x0000000000000000
m8 0x900000000ff007b0 0x0000000000000000
m8 0x900000000ff007c0 0x0000000000000000
m8 0x900000000ff007d0 0x0000000000000000
m8 0x900000000ff007e0 0x0000000000000000
m8 0x900000000ff007f0 0x0000000000000000
m8 0x900000000ff00800 0x0000000000000000
m8 0x900000000ff00810 0x0000000000000000
m8 0x900000000ff00820 0xee0000ee00400000
m8 0x900000000ff00830 0x0000000000000c00
m8 0x900000000ff00840 0x0000640064000000
m8 0x900000000ff00850 0x0000000000000064
m8 0x900000000ff00860 0x0000004000000000
m8 0x900000000ff00870 0x0000000000000000
m8 0x900000000ff00880 0x0000000000000000
m8 0x900000000ff00890 0x0000000000000000
m8 0x900000000ff008a0 0x00000000001c001c
m8 0x900000000ff008b0 0x0000000000000000
m8 0x900000000ff008c0 0x0000000000000000
m8 0x900000000ff008d0 0x0000030d40000000
m8 0x900000000ff008e0 0x0000000023c34600
m8 0x900000000ff008f0 0x0000000010101080
m8 0x900000000ff00900 0x0000000000000000
m8 0x900000000ff00910 0x0000000000000000
m8 0x900000000ff00920 0x0000000000000000
m8 0x900000000ff00930 0x0000000000000000
m8 0x900000000ff00940 0xff07070000060600
m8 0x900000000ff00950 0x0000000000000d00
m8 0x900000000ff00960 0x0705000000040100
m8 0x900000000ff00970 0x010000000003e825
m8 0x900000000ff00980 0x0001010001000101
m8 0x900000000ff00990 0x0707040707070700
m8 0x900000000ff009a0 0x0707040804080404
m8 0x900000000ff009b0 0x02000100000a000f
m8 0x900000000ff009c0 0x04200c2d0c2d0c2d
m8 0x900000000ff009d0 0x0044042004200420
m8 0x900000000ff009e0 0x0000004400440044
m8 0x900000000ff009f0 0x0000000000000000
m8 0x900000000ff00a00 0x007f000000000000
m8 0x900000000ff00a10 0x0000000000000000
m8 0x900000000ff00a20 0x0000000000000000
m8 0x900000000ff00a30 0x0020002000200000
m8 0x900000000ff00a40 0x0020002000200020
m8 0x900000000ff00a50 0x0000000000200020
m8 0x900000000ff00a60 0x0000000000000000
m8 0x900000000ff00a70 0x0014000000000000
m8 0x900000000ff00a80 0x0019001400140014
m8 0x900000000ff00a90 0x0019001900190019
m8 0x900000000ff00aa0 0x0020ffff00000022
m8 0x900000000ff00ab0 0x0020002000200020
m8 0x900000000ff00ac0 0x0020002000200020
m8 0x900000000ff00ad0 0x0000000000000000
m8 0x900000000ff00ae0 0x0000000000000000
m8 0x900000000ff00af0 0x0022002000000000
m8 0x900000000ff00b00 0x003c0036002a0026
m8 0x900000000ff00b10 0x0000003600480042
m8 0x900000000ff00b20 0x00000c2d00000c2d
m8 0x900000000ff00b30 0x00000c2d00000c2d
m8 0x900000000ff00b40 0xffffffffffffffff
m8 0x900000000ff00b50 0xffffffffffffffff
m8 0x900000000ff00b60 0xffffffffffffffff
m8 0x900000000ff00b70 0xffffffffffffffff
m8 0x900000000ff00b80 0xffffffffffffffff
m8 0x900000000ff00b90 0xffffffffffffffff
m8 0x900000000ff00ba0 0xffffffffffffffff
m8 0x900000000ff00bb0 0xffffffffffffffff
m8 0x900000000ff00bc0 0xffffffffffffffff
m8 0x900000000ff00bd0 0xffffffffffffffff
m8 0x900000000ff00be0 0xffffffffffffffff
m8 0x900000000ff00bf0 0xffffffffffffffff
m8 0x900000000ff00030 0x0001010001000100
msleep 3000
memtest 0xa0000000 0xa0000100

ret

function dumpddr
echo function configddr
echo_on 2
m4 0x900000001fe00180 0xfffff417
m4 0x900000001fe00184 0x1f
m8 0x900000003ff00000 0x0000000000000000
m8 0x900000003ff00040 0xfffffffff0000000
#0xf1 for memory controler 1
m8 0x900000003ff00080 0x00000000000000f1
echo_off

local i a
let i 0
do while $(expr $i<=0xbf0)
let a 0x900000000ff00$(expr %%03x $i)
 do if $(expr $i==0x30)
  echo m8 $a $(expr %0x%016llx $(d8q $a 1)&~0x10000000000)
 else
  echo m8 $a $(d8q $a 1)
 end
  let i $(expr $i+0x10)
end
  echo m8 0x900000000ff00030 $(d8q 0x900000000ff00030 1)
echo ret
echo_on
ret

function pci_config_read
pci_config_readv:
local bus dev func reg cnt addr addrp type q
let bus dev func reg cnt  "$1" "$2" "$3" "$4" "$5"
do if $(expr $bus==0)
let addr type $(expr ($dev<<11)|($func<<8)|$reg) 0;
let addrp $(expr 0x90000efdfe000000|($addr&0xffff))
else
let addr type $(expr ($bus<<16)|($dev<<11)|($func<<8)|$reg) 0x10000;
let addrp $(expr 0x90000efdff000000|$addr)
end
if $(test $0 == pci_config_read) let q "q"
d4$q $addrp $cnt
ret

function pci_config_write
local bus dev func reg cnt addr type
let bus dev func reg data  "$1" "$2" "$3" "$4" "$5"
do if $(expr $bus==0)
let addr type $(expr ($dev<<11)|($func<<8)|$reg) 0;
let addrp $(expr 0x90000efdfe000000|($addr&0xffff))
else
let addr type $(expr ($bus<<16)|($dev<<11)|($func<<8)|$reg) 0x10000;
let addrp $(expr 0x90000efdff000000|($addr))
end
m4 $addrp $data
ret

function pci_list_bus
letl show $(setconfig sys.showcmd)
echo_off
letl bus depth reg count ${1:0} ${2:-1} ${3:0} ${4:8}
do if $depth
for letl i 0;$(expr $i<32);letl i $(expr $i+1)
letl vendor $(call pci_config_read $bus $i 0 0 1)
if $(expr $vendor==0xffffffff) loop_continue
letl misc $(call pci_config_read $bus $i 0 0xc 1)
letl n $(expr $misc&0x800000?8:1)
 for letl j 0;$(expr $j<8);letl j $(expr $j+1)
   letl vendor $(call pci_config_read $bus $i $j 0 1)
   if $(expr $vendor==0xffffffff||$vendor==0) loop_continue
    echo_n "$bus\t$i\t$j:\t"
    call pci_config_read $bus $i $j $reg $count
    letl class $(call pci_config_read $bus $i $j 8 1)
    if $(expr ($class&0x06040000)!=0x06040000) loop_continue 
    letl class $(call pci_config_read $bus $i $j 0x18 1)
    letl busno $(expr ($class>>8)&0xff)
    if {$busno!=0} call pci_list_bus $busno $(expr $depth-1) $reg $count
 end
end
end
setconfig sys.showcmd $show
ret

function program
letl file ${1:/tmp/gzrom.bin}
setconfig helpaddr 0xffffffffa000f000
cache_config
put $file 0xffffffffa1000000
if {$(setconfig core.abisize)==64} letl pfile bin/sst.bin64

fcallbin ${pfile:bin/sst.bin} iuep 0xffffffffbfc00000 0 $filesize 0x1000 0xffffffffa1000000 0 $filesize
ret

dellabel cache_init

function cache_init
setconfig core.nocache 0
setconfig cacheflush.nohelp_size 0x1000000

for letl j 0;$(expr $j<4);letl j $(expr $j+1)
cpu $j
cp0s 0 m8 16 $(expr $(cp0s 0 d8q 16 1)|3)
cp0s 0 m8 12 $(expr $(cp0s 0 d8q 12 1)|0xe0)
cp0s 0 m8 29 0
cp0s 0 m8 28 0
end

cpu 0

cp0s 0 m8 26 0x22
cp0s 0 m8 29 0
cp0s 0 m8 28 0
letl addr size ${1:0x980000001fc00000} 0x100000
for letl i 0;$(expr $i<4);letl i $(expr $i+1)
#Index_Store_Tag_S
cache 11 $(expr $addr|$i) $size
end





letl addr size ${1:0x980000001fc00000} 0x20000


for letl j 0;$(expr $j<4);letl j $(expr $j+1)
cpu $j

cp0s 0 m8 29 0
cp0s 0 m8 28 0

for letl i 0;$(expr $i<4);letl i $(expr $i+1)
cp0s 0 m8 26 0x22
#Index_Store_Tag_D
cache 9 $(expr $addr|$i) $size
cp0s 0 m8 26 0
#Index_Store_Tag_I
cache 8 $(expr $addr|$i) $size
end

end


ret

function cache_lock
m8 0x900000003ff00200  0x800000001fc00000
m8 0x900000003ff00240  0xfffffffffff00000
m8 0x900000003ff00200  0x800000001ff00000
m8 0x900000003ff00240  0xfffffffffff00000
ret

function program_cachelock
letl file ${1:/tmp/gzrom.bin}
cachelock_test:
echo_on
setconfig usb_ejtag.put_speed 0x400
setconfig callbin.stacksize 0x1000
setconfig helpaddr 0x980000001fc00000
setconfig gdbserver.forcehb 1
setconfig put.pack_size 0x10000
wdt_close
do if ${cacheinit:1}
call cache_init
else
cp0s 0 m8 16 $(expr $(cp0s 0 d8q 16 1)|3)
cp0s 0 m8 12 $(expr $(cp0s 0 d8q 12 1)|0xe0)
end
call cache_lock
setconfig core.nocache 1
cpu 0
put  $file 0x980000001ff00000
#Scallbin bin/sst.bin64-0x980000001fc00000 iuep 0xffffffffbfc00000 0 $filesize 0x1000 0x980000001ff00000 0 $filesize
ret


function program1
setconfig core.abisize 64
setconfig helpaddr 0x9800001000000000
call cachelock
put /tmp/gzrom.bin 0x9800001000001000
fcallbin bin/sst.bin64 iuep 0xffffffffbfc00000 0 $filesize 0x1000 0x9800001000001000 0 $filesize
ret

function nbmisc_write_index
#nbmisc 0x60
letl index data "$1" "$2"
call pci_config_write 0 0 0 0x60 $(expr 0x80|$index)
call pci_config_write 0 0 0 0x64 $data
ret

function nbmisc_read_index
#nbmisc 0x60
letl index "$1"
call pci_config_write 0 0 0 0x60 $(expr 0x80|$index)
call pci_config_read 0 0 0 0x64 1
ret


function pcie_write_index
#pcie 0xe0
letl index data "$1" "$2"
call pci_config_write 0 8 0 0xe0 $index
call pci_config_write 0 8 0 0xe4 $data
ret

function pcie_read_index
#pcie 0xe0
letl index "$1"
call pci_config_write 0 8 0 0xe0 $index
call pci_config_read 0 8 0 0xe4 1
ret

function reset_pcie
letl val $(call nbmisc_read_index 0x8)
call nbmisc_write_index 0x8 $(expr $v|0x800000004)
call nbmisc_write_index 0x8 $v
ret

function readc00
letl irq count ${1:0} ${2:16}
for letl i $irq;{$i<$count};letl i {$i+1}
m1 0x9000000018000c00 $i
echo_n "$i:"
d1q 0x9000000018000c01 1
end
ret

function pci_list_bus1
letl bus depth reg count bus0 ${1:0} ${2:-1} ${3:0x3c} ${4:1} ${5:0}
do if $depth
for letl i 0;$(expr $i<32);letl i $(expr $i+1)
letl vendor $(call pci_config_read $bus $i 0 0 1)
if $(expr $vendor==0xffffffff) loop_continue
letl misc $(call pci_config_read $bus $i 0 0xc 1)
letl n $(expr $misc&0x800000?8:1)
 for letl j 0;$(expr $j<8);letl j $(expr $j+1)
   letl vendor $(call pci_config_read $bus $i $j 0 1)
   if $(expr $vendor==0xffffffff) loop_continue
    echo "$bus\t$i\t$j:\t" $(call pci_config_read $bus $i $j $reg $count) $bus0
    letl class $(call pci_config_read $bus $i $j 8 1)
    if $(expr ($class&0x06040000)!=0x06040000) loop_continue 
    letl class $(call pci_config_read $bus $i $j 0x18 1)
    letl busno $(expr ($class>>8)&0xff)
    if $(expr $bus==0) letl bus1 $i
    call pci_list_bus1 $busno $(expr $depth-1) $reg $count $bus1
 end
end
end
ret

function reboot
m1 0xffffffffb8000cd6 0x85
m1 0xffffffffb8000cd7 0xe
ret

function reboot1
m4 0xffffffffbfe00120 0x7
m4 0xffffffffbfe0011c 0x6028
ret

function stop_igb
m4  0x90000000484a0100 0x8020
ret

function wdtwrite
letl base  0xffffffffb8000cd6 
m4 $base $1
m4 $(expr $base+1) $2
ret


function poweroff
let wdtcfg wdtmem regcf9 0xffffffffba00a041 0xffffffffbe010000 0xffffffffb8000cf9
m4 $regcf9 4
wdtwrite 0x69 0
wdtwrite 0x6c 0
wdtwrite 0x6d 0
wdtwrite 0x6e 1
wdtwrite 0x6f 0
m4 $wdtcfg 0xff
m4 $wdtmem 5
m4 $(expr $wdtmem+1) 0x500
m4 $wdtmem $(expr $(d4q $wdtmem 1)|0x80)
ret

function exectest
for letl p 0xffffffff90000000; $(expr $p<0xffffffffa0000000); letl p $(expr $p+0x100)
set pc $p
cont
echo $p
end

ret

letl htbase 0x90000efdfb000000

function gpio_clear_output
letl x io $1 0xffffffffbfe0011c
m4 $io {$(d4q $io 1)&~$x}
m4 {$io+4} {$(d4q {$io+4} 1)&~$x}
ret

function gpio_set_output
letl x io $1 0xffffffffbfe0011c
m4 $io {$(d4q $io 1)|$x}
m4 {$io+4} {$(d4q {$io+4} 1)&~$x}
ret

function wdt_close
call gpio_clear_output  0x0040
call gpio_set_output  0x2030
ret

function wdt_open
call gpio_clear_output  0x0020
call gpio_set_output  0x2050
ret


function feeddog
do while 1
msleep 2000
echo_off
wdt_close
echo_on
cont
end
ret

function dumpwin
echo_off
echo function configwin

local i a
let i 0
do while $(expr $i<0x400)
let a 0x900000003ff02$(expr %%03x $i)
  echo m8 $a $(d8q $a 1)
  let i $(expr $i+0x8)
end

let i 0
do while $(expr $i<0x200)
let a 0x900000003ff00$(expr %%03x $i)
  echo m8 $a $(d8q $a 1)
  let i $(expr $i+0x8)
end

echo ret
echo_on
ret

function getpc
let pc {$(jtagregs  d8q 20 1)>>1}
echo $pc
ret

function testecc
echo_off
cpu 1
letl count 0
do while 1:
while {($(getpc)&0xf0000000)!=0x90000000} echo $count $pc 0;
while {($(getpc)&0xf0000000)==0x90000000} echo $count $pc 1;

while {($(getpc)&0xf0000000)==0x80000000} echo $count $pc 2;

letl count {$count+1}
while {($(getpc)&0xf0000000)==0x90000000} echo $count $pc 3;
end
ret


letl phy 16
letl base 0xffffffffbbe10000

function read_phy
letl reg ${1:0}
letl cnt ${2:1}
do while $cnt
letl data {($phy<<11)|($reg<<6)|1|0xc}
m4 {$base+0x10} $data
while {$(d4q $base+0x10)&1};
expr_n %"0x%04x " $(d4q {$base+0x14} 1)
letl reg {$reg+1}
letl cnt {$cnt-1}
end
echo
ret


function write_phy
letl reg ${1:0}
letl data ${2:0}
m4 {$base+0x14} $data
letl data {($phy<<11)|($reg<<6)|2|1|0xc}
m4 {$base+0x10} $data
while {$(d4q $base+0x10)&1};
ret


function find_phy
letl phy0 -1
letl oldphy ${phy:0}
for letl i 0;{$i<32};letl i {$i+1}
let phy $i
letl v $(read_phy 2)
 do if {$v!=0&&$v!=0xffff} 
  echo find phy $phy
  letl phy0 $phy
 end
end
do if {$phy0!=-1}
let phy $phy0
echo phy is $phy
else
let phy $oldphy
echo can not find phy
end
ret


info f
echo_on

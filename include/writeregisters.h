//
// writeregisters.c
//
// DO NOT EDIT THIS FILE.  This file was generated automatically
// by a script that converts an assembler listing into a C structure
// containing the hex values of the instructions in the listing.
// You must edit the assembler source directly and execute the build
// again.
//

static unsigned int aui_writeregisters_code[] = 
tgt_compile(\
".set noat\n" \
"1:lui t7,0xff20;\n" \
"ld zero,FIFO(t7);\n" \
"ld at,FIFO(t7);\n" \
"dmtc0 at,c0_desave;\n" \
"lui at,0xff20;\n" \
"ld v0,FIFO(at);\n" \
"ld v1,FIFO(at);\n" \
"ld a0,FIFO(at);\n" \
"ld a1,FIFO(at);\n" \
"ld a2,FIFO(at);\n" \
"ld a3,FIFO(at);\n" \
"ld t0,FIFO(at);\n" \
"ld t1,FIFO(at);\n" \
"ld t2,FIFO(at);\n" \
"ld t3,FIFO(at);\n" \
"ld t4,FIFO(at);\n" \
"ld t5,FIFO(at);\n" \
"ld t6,FIFO(at);\n" \
"ld t7,FIFO(at);\n" \
"ld s0,FIFO(at);\n" \
"ld s1,FIFO(at);\n" \
"ld s2,FIFO(at);\n" \
"ld s3,FIFO(at);\n" \
"ld s4,FIFO(at);\n" \
"ld s5,FIFO(at);\n" \
"ld s6,FIFO(at);\n" \
"ld s7,FIFO(at);\n" \
"ld t8,FIFO(at);\n" \
"ld t9,FIFO(at);\n" \
"ld k0,FIFO(at);\n" \
"ld k1,FIFO(at);\n" \
"ld gp,FIFO(at);\n" \
"ld sp,FIFO(at);\n" \
"ld s8,FIFO(at);\n" \
"ld ra,FIFO(at);\n" \
"sd v0,STACK(at);\n" \
"ld v0,FIFO(at);\n" \
"dmtc0 v0,c0_status;\n" \
"ld v0,FIFO(at);\n" \
"mtlo v0;\n" \
"ld v0,FIFO(at);\n" \
"mthi v0;\n" \
"ld v0,FIFO(at);\n" \
"dmtc0 v0,c0_badvaddr;\n" \
"ld v0,FIFO(at);\n" \
"dmtc0 v0,c0_cause;\n" \
"ld v0,FIFO(at);\n" \
"dmtc0 v0,c0_depc;\n" \
"lui at,0xff20;\n" \
"ld v0,STACK(at);\n" \
"dmfc0 at,c0_desave;\n" \
"sync ;\n" \
"b 1b;\n" \
"nop ;\n" \
);

static unsigned int aui_writeregisters_all_code[] = 
tgt_compile(\
".set noat\n" \
"1:lui t7,0xff20;\n" \
"ld zero,FIFO(t7);\n" \
"ld at,FIFO(t7);\n" \
"dmtc0 at,c0_desave;\n" \
"lui at,0xff20;\n" \
"ld v0,FIFO(at);\n" \
"ld v1,FIFO(at);\n" \
"ld a0,FIFO(at);\n" \
"ld a1,FIFO(at);\n" \
"ld a2,FIFO(at);\n" \
"ld a3,FIFO(at);\n" \
"ld t0,FIFO(at);\n" \
"ld t1,FIFO(at);\n" \
"ld t2,FIFO(at);\n" \
"ld t3,FIFO(at);\n" \
"ld t4,FIFO(at);\n" \
"ld t5,FIFO(at);\n" \
"ld t6,FIFO(at);\n" \
"ld t7,FIFO(at);\n" \
"ld s0,FIFO(at);\n" \
"ld s1,FIFO(at);\n" \
"ld s2,FIFO(at);\n" \
"ld s3,FIFO(at);\n" \
"ld s4,FIFO(at);\n" \
"ld s5,FIFO(at);\n" \
"ld s6,FIFO(at);\n" \
"ld s7,FIFO(at);\n" \
"ld t8,FIFO(at);\n" \
"ld t9,FIFO(at);\n" \
"ld k0,FIFO(at);\n" \
"ld k1,FIFO(at);\n" \
"ld gp,FIFO(at);\n" \
"ld sp,FIFO(at);\n" \
"ld s8,FIFO(at);\n" \
"ld ra,FIFO(at);\n" \
"sd v0,STACK(at);\n" \
"ld v0,FIFO(at);\n" \
"dmtc0 v0,c0_status;\n" \
"ld v0,FIFO(at);\n" \
"mtlo v0;\n" \
"ld v0,FIFO(at);\n" \
"mthi v0;\n" \
"ld v0,FIFO(at);\n" \
"dmtc0 v0,c0_badvaddr;\n" \
"ld v0,FIFO(at);\n" \
"dmtc0 v0,c0_cause;\n" \
"ld v0,FIFO(at);\n" \
"dmtc0 v0,c0_depc;\n" \
"dmfc0 v0,c0_status;\n" \
"srl	v0,v0,16;\n" \
"andi	v0,v0,0x2000;\n" \
"beqz	v0,2f;\n" \
"nop;\n" \
"ldc1	$0,FIFO(at);\n" \
"ldc1	$1,FIFO(at);\n" \
"ldc1	$2,FIFO(at);\n" \
"ldc1	$3,FIFO(at);\n" \
"ldc1	$4,FIFO(at);\n" \
"ldc1	$5,FIFO(at);\n" \
"ldc1	$6,FIFO(at);\n" \
"ldc1	$7,FIFO(at);\n" \
"ldc1	$8,FIFO(at);\n" \
"ldc1	$9,FIFO(at);\n" \
"ldc1	$10,FIFO(at);\n" \
"ldc1	$11,FIFO(at);\n" \
"ldc1	$12,FIFO(at);\n" \
"ldc1	$13,FIFO(at);\n" \
"ldc1	$14,FIFO(at);\n" \
"ldc1	$15,FIFO(at);\n" \
"ldc1	$16,FIFO(at);\n" \
"ldc1	$17,FIFO(at);\n" \
"ldc1	$18,FIFO(at);\n" \
"ldc1	$19,FIFO(at);\n" \
"ldc1	$20,FIFO(at);\n" \
"ldc1	$21,FIFO(at);\n" \
"ldc1	$22,FIFO(at);\n" \
"ldc1	$23,FIFO(at);\n" \
"ldc1	$24,FIFO(at);\n" \
"ldc1	$25,FIFO(at);\n" \
"ldc1	$26,FIFO(at);\n" \
"ldc1	$27,FIFO(at);\n" \
"ldc1	$28,FIFO(at);\n" \
"ldc1	$29,FIFO(at);\n" \
"ldc1	$30,FIFO(at);\n" \
"ldc1	$31,FIFO(at);\n" \
"2:lui at,0xff20;\n" \
"ld v0,STACK(at);\n" \
"dmfc0 at,c0_desave;\n" \
"sync ;\n" \
"b 1b;\n" \
"nop ;\n" \
);

